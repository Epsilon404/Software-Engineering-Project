{"ast":null,"code":"import Mock from 'mockjs';\nexport default {\n  getMenu: function getMenu(config) {\n    console.log(config);\n\n    var _JSON$parse = JSON.parse(config.body),\n        username = _JSON$parse.username,\n        password = _JSON$parse.password;\n\n    console.log(JSON.parse(config.body)); // 先判断用户是否存在\n    // 判断账号和密码是否对应\n\n    if (username === 'admin' && password === '52@Ereshkigal') {\n      return {\n        code: 20000,\n        data: {\n          menu: [{\n            path: '/',\n            name: 'HomePage',\n            label: '个人主页',\n            icon: 's-home',\n            url: 'Home/Home'\n          }, {\n            path: '/anime',\n            name: 'AnimePage',\n            label: '番剧',\n            icon: 'film',\n            url: 'Anime/Anime'\n          }, {\n            path: '/user',\n            name: 'UserPage',\n            label: '用户信息',\n            icon: 'user',\n            url: 'UserManage/UserManage'\n          }, {\n            label: '其他',\n            icon: 'location',\n            children: [{\n              path: '/page1',\n              name: 'page1',\n              label: '页面1',\n              icon: 'setting',\n              url: 'Other/PageOne'\n            }, {\n              path: '/page2',\n              name: 'page2',\n              label: '页面2',\n              icon: 'setting',\n              url: 'Other/PageTwo'\n            }]\n          }],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      };\n    } else if (username === 'xiaoxiao' && password === 'xiaoxiao') {\n      return {\n        code: 20000,\n        data: {\n          menu: [{\n            path: '/',\n            name: 'HomePage',\n            label: '个人主页',\n            icon: 's-home',\n            url: 'Home/Home'\n          }, {\n            path: '/anime',\n            name: 'AnimePage',\n            label: '番剧',\n            icon: 'film',\n            url: 'Anime/Anime'\n          }],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      };\n    } else {\n      return {\n        code: -999,\n        data: {\n          message: '密码错误'\n        }\n      };\n    }\n  }\n};","map":{"version":3,"sources":["D:/CSC4001/Project/scs/api/mockServerData/permission.js"],"names":["Mock","getMenu","config","console","log","JSON","parse","body","username","password","code","data","menu","path","name","label","icon","url","children","token","Random","guid","message"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\nexport default {\n  getMenu: config => {\n    console.log(config);\n    const { username, password } = JSON.parse(config.body)\n    console.log(JSON.parse(config.body))\n    // 先判断用户是否存在\n    // 判断账号和密码是否对应\n    if (username === 'admin' && password === '52@Ereshkigal') {\n      return {\n        code: 20000,\n        data: {\n          menu: [\n            {\n              path:'/',\n              name:'HomePage',\n              label:'个人主页',\n              icon:'s-home',\n              url: 'Home/Home'\n            },\n            {\n              path:'/anime',\n              name:'AnimePage',\n              label:'番剧',\n              icon:'film',\n              url:'Anime/Anime'\n            },\n            {\n              path:'/user',\n              name:'UserPage',\n              label:'用户信息',\n              icon:'user',\n              url:'UserManage/UserManage'\n            },\n            {\n              label:'其他',\n              icon:'location',\n              children:[\n                  {\n                      path:'/page1',\n                      name:'page1',\n                      label:'页面1',\n                      icon:'setting',\n                      url:'Other/PageOne'\n                  },\n                  {\n                      path:'/page2',\n                      name:'page2',\n                      label:'页面2',\n                      icon:'setting',\n                      url:'Other/PageTwo'\n                  }\n              ]\n            }\n          ],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      }\n    } else if (username === 'xiaoxiao' && password === 'xiaoxiao') {\n      return {\n        code: 20000,\n        data: {\n          menu: [\n            {\n              path:'/',\n              name:'HomePage',\n              label:'个人主页',\n              icon:'s-home',\n              url: 'Home/Home'\n            },\n            {\n              path:'/anime',\n              name:'AnimePage',\n              label:'番剧',\n              icon:'film',\n              url:'Anime/Anime'\n            }\n          ],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      }\n    } else {\n      return {\n        code: -999,\n        data: {\n          message: '密码错误'\n        }\n      }\n    }\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}